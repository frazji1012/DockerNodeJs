version: '3.8'

services:
    # Nginx Server Acting as Load Balancer
    nginx_server:
        image: riteshsoni296/nginx_server:latest
        depends_on:
            - nodejs_application_server_1
            - nodejs_application_server_2
        restart: always
        ports:
            - "80:80"
        environment:
            NGINX_PORT: "80"
            APPLICATION_SERVER_1: "nodejs_application_server_1"
            APPLICATION_SERVER_2: "nodejs_application_server_2"
            APPLICATION_SERVER_PORT: "3000"
        volumes:
            - logs_nginx:/var/log/nginx
        networks:
            - application_external_network
            - application_internal_network

    # Node 10 Application Server Application Server

    nodejs_application_server_1:
        image: riteshsoni296/nodejs_app:latest
        volumes:
            - application_code:/usr/src/app
        restart: always
        depends_on: 
            - mongo_db_server
        networks:
            - application_internal_network
            - database_internal_network

    nodejs_application_server_2:
        image: riteshsoni296/nodejs_app:latest
        volumes:
            - application_code:/usr/src/app
        restart: always
        depends_on: 
            - mongo_db_server
        networks:
            - application_internal_network
            - database_internal_network


    # Nfs Server to share the Java Application Code in Tomcat Application Servers
    nfs_server:
        image: riteshsoni296/nfs_server:latest 
        privileged: "true"        
        volumes:
            - nfs_storage:/nfsshare
        restart: always
        environment:
            SHARED_DIRECTORY: /nfsshare
            SHARED_DIRECTORY_2: /nfsshare/apps
            SYNC: "true"
        networks:
            application_internal_network:
                ipv4_address: 10.150.20.12
        healthcheck:
            test: ["CMD", "netstat", "-tnlp", "|grep", "2049"]
            interval: 60s
            timeout: 10s
            retries: 5
            
    # Mongo Database Server
    mongo_db_server:
        image: riteshsoni296/mongo_server:latest
        environment:
            MONGO_INITDB_ROOT_USERNAME: mongoadmin
            MONGO_INITDB_ROOT_PASSWORD: admin 
            MONGO_INITDB_USERNAME: appuser 
            MONGO_INITDB_PASSWORD: app123
            MONGO_INITDB_DATABASE: nodejsdemo
        volumes:
            - mongo_db_data:/data/db
            - mongo_cluster:/data/configdb
        networks:
            - database_internal_network
            - application_internal_network

# Network Definitions
networks:
    database_internal_network:
        driver: bridge
        internal: "true"
        driver_opts:
            com.docker.network.enable_ipv6: "false"
        ipam:
            driver: default
            config:
                - subnet: "10.120.20.0/24"


    # Extenal Network for internet connectivity and requests from the internet 
    application_external_network:
        driver: bridge
        driver_opts:
            com.docker.network.enable_ipv6: "false"
        ipam:
            driver: default
            config:
                - subnet: "10.140.20.0/24"

    # internal secured Network for Applications 
    application_internal_network:
        driver: bridge
        internal: "true"
        driver_opts:
            com.docker.network.enable_ipv6: "false"
        ipam:
            driver: default
            config:
                - subnet: "10.150.20.0/24"

#Storage Volumes Definitions
volumes:
    # Volume for Java Application Code
    application_code:
        driver: local
        driver_opts:
            type: "nfs4"
            o: "addr=10.150.20.12,rw"
            device: ":/apps"
    
    mongo_db_data:
        driver: local
        
    mongo_cluster:
        driver: local

    logs_nginx:
        driver: local
        
    nfs_storage:
        driver: local
    
